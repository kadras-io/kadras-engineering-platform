#@ load("@ytt:data", "data")
#@ load("@ytt:struct", "struct")
#@ load("@ytt:yaml", "yaml")
#@ load("/helpers.star", "is_any_profile_enabled", "is_package_enabled", "profiles")

#@ if is_package_enabled("buildpacks-catalog") and is_any_profile_enabled([profiles.standalone, profiles.build]):

#@ def compute_package_values():
#@   values = struct.decode(data.values.buildpacks.catalog)
#@
#@   #! Compute values for OCI Registry server
#@   if data.values.platform.oci_registry.server and data.values.platform.oci_registry.repository:
#@     if not hasattr(data.values.buildpacks.catalog, "kp_default_repository") or not hasattr(data.values.buildpacks.catalog.kp_default_repository, "name") or not data.values.buildpacks.catalog.kp_default_repository.name:
#@       values["kp_default_repository"] = {}
#@       values["kp_default_repository"]["name"] = data.values.platform.oci_registry.server.rstrip("/") + "/" + data.values.platform.oci_registry.repository.rstrip("/") + "/buildpacks"
#@     end
#@   end
#@
#@   return struct.encode(values)
#@ end

---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: buildpacks-catalog
  namespace: #@ data.values.platform.namespace
  annotations:
    kapp.k14s.io/change-group: buildpacks-catalog
    kapp.k14s.io/change-rule.kpack: upsert after upserting kpack
    kapp.k14s.io/change-rule.service-account: delete before deleting serviceaccount  
spec:
  serviceAccountName: kadras-install-sa
  packageRef:
    refName: buildpacks-catalog.packages.kadras.io
    versionSelection:
      constraints: 0.12.2
      prereleases: {}
  values:
  - secretRef:
      name: buildpacks-catalog-values
---
apiVersion: v1
kind: Secret
metadata:
  name: buildpacks-catalog-values
  namespace: #@ data.values.platform.namespace
stringData:
  values.yaml: #@ yaml.encode(compute_package_values())

#@ end

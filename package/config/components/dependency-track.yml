#@ load("@ytt:data", "data")
#@ load("@ytt:struct", "struct")
#@ load("@ytt:yaml", "yaml")
#@ load("/helpers.star", "get_issuer_name", "is_package_additional")

#@ if is_package_additional("dependency-track"):

#@ def compute_package_values():
#@   values = struct.decode(data.values.dependency_track)
#@
#@   #! Compute values for Ingress Domain Name
#@   if data.values.platform.ingress.domain and (not hasattr(data.values.dependency_track, "domain_name") or not data.values.dependency_track.domain_name):
#@     values["domain_name"] = "dependency-track." + data.values.platform.ingress.domain
#@   end
#@
#@   #! Compute values for Ingress Issuer
#@   if data.values.platform.ingress.issuer and (not hasattr(data.values.dependency_track, "ingress_issuer") or not data.values.dependency_track.ingress_issuer):
#@     values["ingress_issuer"] = get_issuer_name(data.values.platform.ingress.issuer)
#@   end
#@
#@   return struct.encode(values)
#@ end

---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: dependency-track
  namespace: #@ data.values.platform.namespace
  annotations:
    kapp.k14s.io/change-group: dependency-track
    kapp.k14s.io/change-rule.cert-manager: upsert after upserting cert-manager
    kapp.k14s.io/change-rule.contour: upsert after upserting contour
    kapp.k14s.io/change-rule.postgresql-operator: upsert after upserting postgresql-operator
    kapp.k14s.io/change-rule.secretgen-controller: upsert after upserting secretgen-controller
    kapp.k14s.io/change-rule.serviceaccount: delete before deleting serviceaccount
spec:
  serviceAccountName: kadras-install-sa
  packageRef:
    refName: dependency-track.packages.kadras.io
    versionSelection:
      constraints: 4.13.4
  values:
    - secretRef:
        name: dependency-track-values
---
apiVersion: v1
kind: Secret
metadata:
  name: dependency-track-values
  namespace: #@ data.values.platform.namespace
stringData:
  values.yaml: #@ yaml.encode(compute_package_values())

#@ end